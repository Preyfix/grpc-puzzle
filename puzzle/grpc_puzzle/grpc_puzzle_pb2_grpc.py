# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import grpc_puzzle_pb2 as grpc__puzzle__pb2


class PuzzleStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StartHere = channel.unary_unary(
        '/com.jayway.kday.grpc.Puzzle/StartHere',
        request_serializer=grpc__puzzle__pb2.YourName.SerializeToString,
        response_deserializer=grpc__puzzle__pb2.ClueOne.FromString,
        )
    self.endpointOne = channel.unary_unary(
        '/com.jayway.kday.grpc.Puzzle/endpointOne',
        request_serializer=grpc__puzzle__pb2.ClueOne.SerializeToString,
        response_deserializer=grpc__puzzle__pb2.ClueTwo.FromString,
        )
    self.endpointTwo = channel.unary_unary(
        '/com.jayway.kday.grpc.Puzzle/endpointTwo',
        request_serializer=grpc__puzzle__pb2.ClueTwo.SerializeToString,
        response_deserializer=grpc__puzzle__pb2.ClueThree.FromString,
        )
    self.endpointThree = channel.unary_unary(
        '/com.jayway.kday.grpc.Puzzle/endpointThree',
        request_serializer=grpc__puzzle__pb2.ClueThree.SerializeToString,
        response_deserializer=grpc__puzzle__pb2.ClueFour.FromString,
        )
    self.SolvePuzzle = channel.unary_unary(
        '/com.jayway.kday.grpc.Puzzle/SolvePuzzle',
        request_serializer=grpc__puzzle__pb2.Key.SerializeToString,
        response_deserializer=grpc__puzzle__pb2.FinalSecret.FromString,
        )


class PuzzleServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def StartHere(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def endpointOne(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def endpointTwo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def endpointThree(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SolvePuzzle(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PuzzleServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StartHere': grpc.unary_unary_rpc_method_handler(
          servicer.StartHere,
          request_deserializer=grpc__puzzle__pb2.YourName.FromString,
          response_serializer=grpc__puzzle__pb2.ClueOne.SerializeToString,
      ),
      'endpointOne': grpc.unary_unary_rpc_method_handler(
          servicer.endpointOne,
          request_deserializer=grpc__puzzle__pb2.ClueOne.FromString,
          response_serializer=grpc__puzzle__pb2.ClueTwo.SerializeToString,
      ),
      'endpointTwo': grpc.unary_unary_rpc_method_handler(
          servicer.endpointTwo,
          request_deserializer=grpc__puzzle__pb2.ClueTwo.FromString,
          response_serializer=grpc__puzzle__pb2.ClueThree.SerializeToString,
      ),
      'endpointThree': grpc.unary_unary_rpc_method_handler(
          servicer.endpointThree,
          request_deserializer=grpc__puzzle__pb2.ClueThree.FromString,
          response_serializer=grpc__puzzle__pb2.ClueFour.SerializeToString,
      ),
      'SolvePuzzle': grpc.unary_unary_rpc_method_handler(
          servicer.SolvePuzzle,
          request_deserializer=grpc__puzzle__pb2.Key.FromString,
          response_serializer=grpc__puzzle__pb2.FinalSecret.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'com.jayway.kday.grpc.Puzzle', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
